
  CREATE TABLE "ADMINISTRATOR" 
   (	"ID_ADMINISTRATORA" NUMBER(5,0)
   )
  CREATE TABLE "BAGAZ" 
   (	"ID_BAGAZU" NUMBER(5,0), 
	"RODZAJ" VARCHAR2(12 BYTE), 
	"WAGA" NUMBER(4,0), 
	"ID_KLIENTA" NUMBER(5,0)
   ) 
  CREATE TABLE "BILET" 
   (	"ID_BILETU" NUMBER(5,0), 
	"CENA" NUMBER(4,0), 
	"RZAD" NUMBER(3,0), 
	"TYP_MIEJSCA" VARCHAR2(20 BYTE), 
	"ID_KLIENTA" NUMBER(5,0), 
	"ID_LOTU" NUMBER(5,0)
   ) 
  CREATE TABLE "KLIENT" 
   (	"ID_KLIENTA" NUMBER(5,0)
   ) 
  CREATE TABLE "LOT" 
   (	"ID_LOTU" NUMBER(5,0), 
	"ID_SAMOLOTU" NUMBER(5,0), 
	"ID_LOTNISKA_WYLOTU" NUMBER(5,0), 
	"ID_LOTNISKA_PRZYLOTU" NUMBER(5,0), 
	"CENA_BILETU" NUMBER(4,0), 
	"DATA_LOTU" DATE
   )
  CREATE TABLE "LOTNISKO" 
   (	"ID_LOTNISKA" NUMBER(5,0), 
	"KRAJ" VARCHAR2(20 BYTE), 
	"MIASTO" VARCHAR2(25 BYTE)
   ) 
  CREATE TABLE "LOT_PRACOWNIK_ADMINISTRACYJNY" 
   (	"ID_LOTU" NUMBER(5,0), 
	"ID_PRACOWNIKA" NUMBER(5,0)
   ) 
  CREATE TABLE "PRACOWNIK_ADMINISTRACYJNY" 
   (	"ID_PRACOWNIKA" NUMBER(5,0), 
	"ID_ADMINISTRATORA" NUMBER(5,0), 
	"ZAROBKI" NUMBER(6,2)
   )
  CREATE TABLE "PRACOWNIK_TECHNICZNY" 
   (	"ID_PRACOWNIKA" NUMBER(5,0), 
	"ID_ADMINISTRATORA" NUMBER(5,0), 
	"ZAROBKI" NUMBER(6,2)
   ) 
  CREATE TABLE "SAMOLOT" 
   (	"ID_SAMOLOTU" NUMBER(5,0), 
	"NAZWA" VARCHAR2(20 BYTE), 
	"MODEL" VARCHAR2(25 BYTE), 
	"ILOSC_MIEJSC" NUMBER(4,0)
   ) 
  CREATE TABLE "SAMOLOT_PRACOWNIK_TECHNICZNY" 
   (	"ID_SAMOLOTU" NUMBER(5,0), 
	"ID_PRACOWNIKA" NUMBER(5,0)
   ) 
  CREATE TABLE "UZYTKOWNIK" 
   (	"ID_UZYTKOWNIKA" NUMBER(5,0), 
	"LOGIN" VARCHAR2(15 BYTE), 
	"HASLO" VARCHAR2(20 BYTE), 
	"NR_TELEFONU" VARCHAR2(130 BYTE), 
	"KRAJ_ZAMIESZKANIA" VARCHAR2(25 BYTE), 
	"MIEJSCOWOSC" VARCHAR2(25 BYTE), 
	"ULICA" VARCHAR2(30 BYTE), 
	"EMAIL" VARCHAR2(35 BYTE), 
	"PESEL" VARCHAR2(40 BYTE), 
	"IMIE" VARCHAR2(20 BYTE), 
	"NAZWISKO" VARCHAR2(30 BYTE), 
	"ID_KLIENTA" NUMBER(5,0), 
	"ID_PRAC_ADM" NUMBER(5,0), 
	"ID_ADMINISTRATORA" NUMBER(5,0), 
	"ID_PRAC_TECH" NUMBER(5,0), 
	"NR_DOMU" VARCHAR2(20 BYTE), 
	"NR_LOKALU" VARCHAR2(20 BYTE)
   ) 
  CREATE TABLE "ZAJETE_MIEJSCA" 
   (	"ID_MIEJSCA" NUMBER, 
	"ID_LOTU" NUMBER, 
	"RZAD" NUMBER, 
	"TYP_MIEJSCA" VARCHAR2(20 BYTE)
   ) 
--------------------------------------------------------
--  DDL for View DMRS_INSTALLATION
--------------------------------------------------------

REM INSERTING into ADMINISTRATOR
SET DEFINE OFF;

Insert into ADMINISTRATOR (ID_ADMINISTRATORA) values ('1');
REM INSERTING into BAGAZ
SET DEFINE OFF;
Insert into BAGAZ (ID_BAGAZU,RODZAJ,WAGA,ID_KLIENTA) values ('1','rejestrowany','3','1');
Insert into BAGAZ (ID_BAGAZU,RODZAJ,WAGA,ID_KLIENTA) values ('2','podreczny','3','2');
Insert into BAGAZ (ID_BAGAZU,RODZAJ,WAGA,ID_KLIENTA) values ('3','podreczny','3','3');
Insert into BAGAZ (ID_BAGAZU,RODZAJ,WAGA,ID_KLIENTA) values ('4','rejestrowany','3','3');
REM INSERTING into BILET
SET DEFINE OFF;
Insert into BILET (ID_BILETU,CENA,RZAD,TYP_MIEJSCA,ID_KLIENTA,ID_LOTU) values ('2','1000','3','okno','3','1');
Insert into BILET (ID_BILETU,CENA,RZAD,TYP_MIEJSCA,ID_KLIENTA,ID_LOTU) values ('1','1000','3','srodek','1','1');
REM INSERTING into KLIENT
SET DEFINE OFF;
Insert into KLIENT (ID_KLIENTA) values ('1');
Insert into KLIENT (ID_KLIENTA) values ('2');
Insert into KLIENT (ID_KLIENTA) values ('3');
Insert into KLIENT (ID_KLIENTA) values ('4');
Insert into KLIENT (ID_KLIENTA) values ('5');
Insert into KLIENT (ID_KLIENTA) values ('6');
Insert into KLIENT (ID_KLIENTA) values ('7');
Insert into KLIENT (ID_KLIENTA) values ('8');
Insert into KLIENT (ID_KLIENTA) values ('9');
Insert into KLIENT (ID_KLIENTA) values ('10');
Insert into KLIENT (ID_KLIENTA) values ('11');
Insert into KLIENT (ID_KLIENTA) values ('12');
Insert into KLIENT (ID_KLIENTA) values ('13');
Insert into KLIENT (ID_KLIENTA) values ('14');
Insert into KLIENT (ID_KLIENTA) values ('15');
Insert into KLIENT (ID_KLIENTA) values ('16');
Insert into KLIENT (ID_KLIENTA) values ('17');
Insert into KLIENT (ID_KLIENTA) values ('18');
Insert into KLIENT (ID_KLIENTA) values ('19');
Insert into KLIENT (ID_KLIENTA) values ('20');
Insert into KLIENT (ID_KLIENTA) values ('21');
Insert into KLIENT (ID_KLIENTA) values ('22');
Insert into KLIENT (ID_KLIENTA) values ('23');
Insert into KLIENT (ID_KLIENTA) values ('24');
Insert into KLIENT (ID_KLIENTA) values ('25');
REM INSERTING into LOT
SET DEFINE OFF;
Insert into LOT (ID_LOTU,ID_SAMOLOTU,ID_LOTNISKA_WYLOTU,ID_LOTNISKA_PRZYLOTU,CENA_BILETU,DATA_LOTU) values ('1','1','1','2','1000',to_date('18/11/29','RR/MM/DD'));
Insert into LOT (ID_LOTU,ID_SAMOLOTU,ID_LOTNISKA_WYLOTU,ID_LOTNISKA_PRZYLOTU,CENA_BILETU,DATA_LOTU) values ('2','1','2','1','800',to_date('18/11/30','RR/MM/DD'));
REM INSERTING into LOTNISKO
SET DEFINE OFF;
Insert into LOTNISKO (ID_LOTNISKA,KRAJ,MIASTO) values ('1','POLSKA','KRAKOW');
Insert into LOTNISKO (ID_LOTNISKA,KRAJ,MIASTO) values ('2','NIEMCY','BERLIN');
REM INSERTING into LOT_PRACOWNIK_ADMINISTRACYJNY
SET DEFINE OFF;
REM INSERTING into PRACOWNIK_ADMINISTRACYJNY
SET DEFINE OFF;
Insert into PRACOWNIK_ADMINISTRACYJNY (ID_PRACOWNIKA,ID_ADMINISTRATORA,ZAROBKI) values ('1','1','3444,99');
REM INSERTING into PRACOWNIK_TECHNICZNY
SET DEFINE OFF;
Insert into PRACOWNIK_TECHNICZNY (ID_PRACOWNIKA,ID_ADMINISTRATORA,ZAROBKI) values ('1','1','3000');
Insert into PRACOWNIK_TECHNICZNY (ID_PRACOWNIKA,ID_ADMINISTRATORA,ZAROBKI) values ('2','1','2000');
REM INSERTING into SAMOLOT
SET DEFINE OFF;
Insert into SAMOLOT (ID_SAMOLOTU,NAZWA,MODEL,ILOSC_MIEJSC) values ('1','BOEING','747','300');
REM INSERTING into SAMOLOT_PRACOWNIK_TECHNICZNY
SET DEFINE OFF;
REM INSERTING into UZYTKOWNIK
SET DEFINE OFF;
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('5','A','B','1231231','POLSKA','KRAKOW','WISNIOWA','DAMIAN@GMAIL.COM','123123','IMIE','NAZWISKO','19',null,null,null,'5','3');
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('6','asd','das','21','d','s','d','das','12','das','da','20',null,null,null,'1','2');
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('12','adm','adm','712832145','Polska','Œwiebodzin','Warszawska','jakijanuszatgmaildotcom','8712041231','Janusz','Jaki',null,'1',null,null,'88',null);
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('4','DAMIK214','LOLEK','912312','POLSKA','WISNIOWA','5','DAMIAN','9123123123','DAMIAN','KROL','18',null,null,null,'34','2');
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('3','b','b','0','b','b','b',null,'213123','b','b','16',null,null,null,'3',null);
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('2','a','a','0','polska','krakow','dluga ',null,'1231231','a','a','1',null,null,null,'7','2');
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('11','c','c','889614653','polska','Krakow','Dluga',null,'66120912312','Jan','Kowalski',null,null,null,'1','3',null);
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('9','ASDASDAasd','SADSAD','2','d','d','d','d','1','dasd','d','23',null,null,null,'2','2');
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('7','asd','das','21','d','s','d','das','12','das','da','21',null,null,null,'1','2');
Insert into UZYTKOWNIK (ID_UZYTKOWNIKA,LOGIN,HASLO,NR_TELEFONU,KRAJ_ZAMIESZKANIA,MIEJSCOWOSC,ULICA,EMAIL,PESEL,IMIE,NAZWISKO,ID_KLIENTA,ID_PRAC_ADM,ID_ADMINISTRATORA,ID_PRAC_TECH,NR_DOMU,NR_LOKALU) values ('8','asad','das','21','d','s','d','das','12','das','da','22',null,null,null,'1','2');
REM INSERTING into ZAJETE_MIEJSCA
SET DEFINE OFF;
Insert into ZAJETE_MIEJSCA (ID_MIEJSCA,ID_LOTU,RZAD,TYP_MIEJSCA) values ('1','1','3','srodek');
Insert into ZAJETE_MIEJSCA (ID_MIEJSCA,ID_LOTU,RZAD,TYP_MIEJSCA) values ('2','1','3','okno');
--------------------------------------------------------
--  DDL for Index LOT_PRACOWNIK_ADMINISTRACY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LOT_PRACOWNIK_ADMINISTRACY_PK" ON "LOT_PRACOWNIK_ADMINISTRACYJNY" ("ID_LOTU", "ID_PRACOWNIKA") 
  CREATE UNIQUE INDEX "PK_ADMIN" ON "ADMINISTRATOR" ("ID_ADMINISTRATORA") 
  CREATE UNIQUE INDEX "PK_KLIENT" ON "KLIENT" ("ID_KLIENTA") 
  CREATE UNIQUE INDEX "PK_PRAC_ADM" ON "PRACOWNIK_ADMINISTRACYJNY" ("ID_PRACOWNIKA")
  CREATE UNIQUE INDEX "PK_PRAC_TECH" ON "PRACOWNIK_TECHNICZNY" ("ID_PRACOWNIKA") 
  CREATE UNIQUE INDEX "SAMOLOT_PRACOWNIK_TECHNICZ_PK" ON "SAMOLOT_PRACOWNIK_TECHNICZNY" ("ID_SAMOLOTU", "ID_PRACOWNIKA") 
  CREATE UNIQUE INDEX "UZYTKOWNIK_PK" ON "UZYTKOWNIK" ("ID_UZYTKOWNIKA") 
  
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "DEL" AS
    nazwa   VARCHAR(60);
    temp    VARCHAR(60);
BEGIN
    FOR rec IN 1..138 LOOP
        SELECT
            table_name
        INTO nazwa
        FROM
            all_tables
        WHERE
            table_name LIKE 'DMRS_%' FETCH FIRST 1 ROWS with ties;
            
        temp := 'drop table ' + nazwa;
        EXECUTE IMMEDIATE temp;
    END LOOP;
END del;

set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "DODAJ_BAGAZ" 
(
  RODZAJ IN VARCHAR2 
, WAGA IN NUMBER
, ID_KLIENTA IN NUMBER
) AS 
    bagazId NUMBER;
    maxId NUMBER;
    rodzajBag VARCHAR2(12);
BEGIN
   
    SELECT MAX(ID_BAGAZU) INTO bagazId FROM BAGAZ;
    IF (bagazId IS NULL) THEN
    bagazId:=1;
    ELSE 
    bagazId:= bagazId+1;
    END IF;
    rodzajBag := rodzaj;
    
    IF(upper(rodzajBag)!='REJESTROWANY') THEN 
    rodzajBag := 'podreczny';
    ELSE 
    rodzajBag := 'rejestrowany';
    END IF;

    
    INSERT INTO BAGAZ VALUES(bagazId,rodzajBag,waga,id_klienta);
    


END DODAJ_BAGAZ;

set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "DODAJ_LOT" 
(
  ID_SAMOLOTU IN NUMBER 
  ,CENA_BILETU IN NUMBER
  ,DATA_LOT IN DATE
 , LOTNISKO_WYLOTU IN VARCHAR2
, LOTNISKO_PRZYLOTU IN VARCHAR2 
) AS 
 idLotu NUMBER;
 idLotniskaWylotu NUMBER;
 idLotniskaPrzylotu NUMBER;
BEGIN

    SELECT ID_LOTNISKA INTO idLotniskaWylotu FROM LOTNISKO WHERE LOTNISKO_WYLOTU LIKE MIASTO;
    SELECT ID_LOTNISKA INTO idLotniskaPrzylotu FROM LOTNISKO WHERE LOTNISKO_PRZYLOTU LIKE MIASTO;
    SELECT MAX(ID_LOTU) INTO idLotu FROM LOT; 
  
    IF(idLotu is NULL) THEN
    idLotu:=1;
    ELSE 
    idLotu:=idLotu+1;
    END IF;
    INSERT INTO LOT VALUES(idLotu,ID_SAMOLOTU, idLotniskaWylotu,idLotniskaPrzylotu,CENA_BILETU,DATA_LOT);

END DODAJ_LOT;


set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "DODAJ_PRACOWNIKA_ADMINISTRACYJNEGO" 
(
  LOGIN IN VARCHAR2 
, PASS IN VARCHAR2 
, FIRSTNAME IN VARCHAR2 
, LASTNAME IN VARCHAR2 
, PESEL IN VARCHAR2 
, PHONE IN VARCHAR2 
, EMAIL IN VARCHAR2 
, COUNTRY IN VARCHAR2 
, CITY IN VARCHAR2 
, STREET IN VARCHAR2 
, HOUSENR IN VARCHAR2 
, FLATNR IN VARCHAR2
, ZAROBKI IN NUMBER
, ID_ADMIN IN NUMBER
) AS 
    workerId NUMBER;
    maxId NUMBER;
    userLogin VARCHAR2(15);
BEGIN
    
    SELECT MAX(ID_PRACOWNIKA) INTO workerId FROM PRACOWNIK_ADMINISTRACYJNY;
    INSERT INTO PRACOWNIK_ADMINISTRACYJNY VALUES (workerId +1,ID_ADMIN,ZAROBKI);
    SELECT MAX(ID_UZYTKOWNIKA) INTO maxId FROM UZYTKOWNIK;
    INSERT INTO uzytkownik VALUES (maxId+1,LOGIN,PASS,PHONE,COUNTRY,CITY,STREET,EMAIL,PESEL,FIRSTNAME,LASTNAME,null,workerId,null,null,HOUSENR,FLATNR);
    


END DODAJ_PRACOWNIKA_ADMINISTRACYJNEGO;


set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "DODAJ_PRACOWNIKA_TECHNICZNEGO" 
(
  LOGIN IN VARCHAR2 
, PASS IN VARCHAR2 
, FIRSTNAME IN VARCHAR2 
, LASTNAME IN VARCHAR2 
, PESEL IN VARCHAR2 
, PHONE IN VARCHAR2 
, EMAIL IN VARCHAR2 
, COUNTRY IN VARCHAR2 
, CITY IN VARCHAR2 
, STREET IN VARCHAR2 
, HOUSENR IN VARCHAR2 
, FLATNR IN VARCHAR2
, ZAROBKI IN NUMBER
, ID_ADMIN IN NUMBER
) AS 
    workerId NUMBER;
    maxId NUMBER;
    userLogin VARCHAR2(15);
BEGIN
    
    SELECT MAX(ID_PRACOWNIKA) INTO workerId FROM PRACOWNIK_TECHNICZNY;
    INSERT INTO PRACOWNIK_TECHNICZNY VALUES (workerId +1,ID_ADMIN,ZAROBKI);
    SELECT MAX(ID_UZYTKOWNIKA) INTO maxId FROM UZYTKOWNIK;
    INSERT INTO uzytkownik VALUES (maxId+1,LOGIN,PASS,PHONE,COUNTRY,CITY,STREET,EMAIL,PESEL,FIRSTNAME,LASTNAME,null,null,null,workerId,HOUSENR,FLATNR);
    


END DODAJ_PRACOWNIKA_TECHNICZNEGO;


set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "KUP_BILET" (
    typ                 IN VARCHAR2,
    rzad                IN NUMBER,
    id_klienta          IN NUMBER,
    lotnisko_wylotu     IN VARCHAR2,
    lotnisko_przylotu   IN VARCHAR2,
    data_lotu           IN DATE
) AS
    biletid     NUMBER;
    cena        NUMBER;
    idlotu      NUMBER;
    czyzajete   BOOLEAN;
    idmiejsca   NUMBER;
BEGIN
    SELECT
        MAX(id_biletu)
    INTO biletid
    FROM
        bilet;

    IF ( biletid IS NULL ) THEN
        biletid := 1;
    ELSE
        biletid := biletid + 1;
    END IF;

    idlotu := get_id_lotu('KRAKOW','BERLIN',data_lotu);
    SELECT
        cena_biletu
    INTO cena
    FROM
        lot
    WHERE
        lot.id_lotu = idlotu;

    czyzajete := czy_zajete(idlotu,rzad,typ);
    IF ( czyzajete = true ) THEN
        dbms_output.put_line('miejsce zajete');
    ELSE
        dbms_output.put_line('miejsce wolne');
        INSERT INTO bilet VALUES (
            biletid,
            cena,
            rzad,
            typ,
            id_klienta,
            idlotu
        );

        SELECT
            MAX(id_miejsca)
        INTO idmiejsca
        FROM
            zajete_miejsca;

        IF ( idmiejsca IS NULL ) THEN
            idmiejsca := 1;
        ELSE
            idmiejsca := idmiejsca + 1;
        END IF;

        INSERT INTO zajete_miejsca VALUES (
            idmiejsca,
            idlotu,
            rzad,
            typ
        );

    END IF;

END kup_bilet;

set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "REJESTRACJA" 
(
  LOGIN IN VARCHAR2 
, PASS IN VARCHAR2 
, FIRSTNAME IN VARCHAR2 
, LASTNAME IN VARCHAR2 
, PESEL IN VARCHAR2 
, PHONE IN VARCHAR2 
, EMAIL IN VARCHAR2 
, COUNTRY IN VARCHAR2 
, CITY IN VARCHAR2 
, STREET IN VARCHAR2 
, HOUSENR IN VARCHAR2 
, FLATNR IN VARCHAR2 
) AS 
    clientId NUMBER;
    maxId NUMBER;
    userLogin VARCHAR2(15);
BEGIN
    
    SELECT MAX(ID_KLIENTA) INTO clientId FROM KLIENT;
    INSERT INTO KLIENT("ID_KLIENTA") VALUES (clientId +1);
    SELECT MAX(ID_UZYTKOWNIKA) INTO maxId FROM UZYTKOWNIK;
    INSERT INTO uzytkownik VALUES (maxId+1,LOGIN,PASS,PHONE,COUNTRY,CITY,STREET,EMAIL,PESEL,FIRSTNAME,LASTNAME,clientId,null,null,null,HOUSENR,FLATNR);
    


END REJESTRACJA;

  CREATE OR REPLACE EDITIONABLE FUNCTION "CZY_ZAJETE" (
    id_lot   IN NUMBER,
    rz       IN NUMBER,
    typ      IN VARCHAR2
) RETURN BOOLEAN AS
    czyzajete     BOOLEAN;
    iloscmiejsc   NUMBER;
    idmiejsca     NUMBER;
BEGIN
    SELECT
        ilosc_miejsc
    INTO iloscmiejsc
    FROM
        samolot
        NATURAL JOIN lot
    WHERE
        id_lotu LIKE id_lot;

    IF ( rz > iloscmiejsc / 6 ) THEN 
        czyzajete := true;
    ELSE
    
     BEGIN
        SELECT
            id_miejsca
        INTO idmiejsca
        FROM
            zajete_miejsca
        WHERE
            id_lotu LIKE id_lot
            AND rzad LIKE rz
            AND typ_miejsca LIKE typ;
    exception
    when no_data_found then
        idmiejsca := null;
    END;
    
        IF ( idmiejsca IS NULL ) THEN
            czyzajete := false;
        ELSE
            czyzajete := true;
        END IF;

    END IF;

    RETURN czyzajete;
END czy_zajete;


  CREATE OR REPLACE EDITIONABLE FUNCTION "GET_ID_LOTU" 
(
  LOTNISKO_WYLOTU IN VARCHAR2
, LOTNISKO_PRZYLOTU IN VARCHAR2
, DATA_LOT IN DATE
 )
 RETURN NUMBER 
AS 
 idLotu NUMBER;
 idLotniskaWylotu NUMBER;
 idLotniskaPrzylotu NUMBER;
BEGIN

    SELECT ID_LOTNISKA INTO idLotniskaWylotu FROM LOTNISKO WHERE LOTNISKO_WYLOTU LIKE MIASTO;
    SELECT ID_LOTNISKA INTO idLotniskaPrzylotu FROM LOTNISKO WHERE LOTNISKO_PRZYLOTU LIKE MIASTO;
    
    SELECT ID_LOTU INTO idLotu from LOT WHERE idLotniskaWylotu LIKE ID_LOTNISKA_WYLOTU AND idLotniskaPrzylotu 
    LIKE ID_LOTNISKA_PRZYLOTU AND DATA_LOTU LIKE DATA_LOT;
    

  RETURN idLotu;
END GET_ID_LOTU;




  ALTER TABLE "PRACOWNIK_ADMINISTRACYJNY" MODIFY ("ID_PRACOWNIKA" NOT NULL ENABLE);
  ALTER TABLE "PRACOWNIK_ADMINISTRACYJNY" ADD CONSTRAINT "PK_PRAC_ADM" PRIMARY KEY ("ID_PRACOWNIKA")
  ALTER TABLE "PRACOWNIK_ADMINISTRACYJNY" MODIFY ("ID_ADMINISTRATORA" NOT NULL ENABLE);
  ALTER TABLE "PRACOWNIK_ADMINISTRACYJNY" MODIFY ("ZAROBKI" NOT NULL ENABLE);
  
  ALTER TABLE "ZAJETE_MIEJSCA" ADD PRIMARY KEY ("ID_MIEJSCA")
  ALTER TABLE "ZAJETE_MIEJSCA" MODIFY ("ID_LOTU" NOT NULL ENABLE);
  ALTER TABLE "ZAJETE_MIEJSCA" MODIFY ("RZAD" NOT NULL ENABLE);
  ALTER TABLE "ZAJETE_MIEJSCA" MODIFY ("TYP_MIEJSCA" NOT NULL ENABLE);
  
  ALTER TABLE "BAGAZ" ADD CHECK (rodzaj IN ('rejestrowany', 'podreczny')) ENABLE;
  ALTER TABLE "BAGAZ" ADD PRIMARY KEY ("ID_BAGAZU")
  ALTER TABLE "BAGAZ" MODIFY ("ID_KLIENTA" NOT NULL ENABLE);

  ALTER TABLE "PRACOWNIK_TECHNICZNY" MODIFY ("ID_PRACOWNIKA" NOT NULL ENABLE);
  ALTER TABLE "PRACOWNIK_TECHNICZNY" ADD CONSTRAINT "PK_PRAC_TECH" PRIMARY KEY ("ID_PRACOWNIKA")
  ALTER TABLE "PRACOWNIK_TECHNICZNY" MODIFY ("ID_ADMINISTRATORA" NOT NULL ENABLE);
  ALTER TABLE "PRACOWNIK_TECHNICZNY" MODIFY ("ZAROBKI" NOT NULL ENABLE);

  ALTER TABLE "ADMINISTRATOR" MODIFY ("ID_ADMINISTRATORA" NOT NULL ENABLE);
  ALTER TABLE "ADMINISTRATOR" ADD CONSTRAINT "PK_ADMIN" PRIMARY KEY ("ID_ADMINISTRATORA")

  ALTER TABLE "KLIENT" MODIFY ("ID_KLIENTA" NOT NULL ENABLE);
  ALTER TABLE "KLIENT" ADD CONSTRAINT "PK_KLIENT" PRIMARY KEY ("ID_KLIENTA")

  ALTER TABLE "LOT_PRACOWNIK_ADMINISTRACYJNY" MODIFY ("ID_LOTU" NOT NULL ENABLE);
  ALTER TABLE "LOT_PRACOWNIK_ADMINISTRACYJNY" MODIFY ("ID_PRACOWNIKA" NOT NULL ENABLE);
  ALTER TABLE "LOT_PRACOWNIK_ADMINISTRACYJNY" ADD CONSTRAINT "LOT_PRACOWNIK_ADMINISTRACY_PK" PRIMARY KEY ("ID_LOTU", "ID_PRACOWNIKA")

  ALTER TABLE "UZYTKOWNIK" ADD CONSTRAINT "UZYTKOWNIK_PK" PRIMARY KEY ("ID_UZYTKOWNIKA")
  ALTER TABLE "UZYTKOWNIK" MODIFY ("IMIE" NOT NULL ENABLE);
  ALTER TABLE "UZYTKOWNIK" MODIFY ("NAZWISKO" NOT NULL ENABLE);
  ALTER TABLE "UZYTKOWNIK" MODIFY ("LOGIN" NOT NULL ENABLE);
  ALTER TABLE "UZYTKOWNIK" MODIFY ("HASLO" NOT NULL ENABLE);
  ALTER TABLE "UZYTKOWNIK" MODIFY ("PESEL" NOT NULL ENABLE);
  ALTER TABLE "UZYTKOWNIK" MODIFY ("NR_DOMU" NOT NULL ENABLE);

  ALTER TABLE "BILET" MODIFY ("CENA" NOT NULL ENABLE);
  ALTER TABLE "BILET" MODIFY ("RZAD" NOT NULL ENABLE);
  ALTER TABLE "BILET" ADD CHECK (typ_miejsca IN('okno','srodek','przejscie')) ENABLE;
  ALTER TABLE "BILET" ADD PRIMARY KEY ("ID_BILETU")
  ALTER TABLE "BILET" MODIFY ("ID_KLIENTA" NOT NULL ENABLE);
  ALTER TABLE "BILET" MODIFY ("TYP_MIEJSCA" NOT NULL ENABLE);
  ALTER TABLE "BILET" MODIFY ("ID_LOTU" NOT NULL ENABLE);

  ALTER TABLE "LOTNISKO" MODIFY ("KRAJ" NOT NULL ENABLE);
  ALTER TABLE "LOTNISKO" MODIFY ("MIASTO" NOT NULL ENABLE);
  ALTER TABLE "LOTNISKO" ADD PRIMARY KEY ("ID_LOTNISKA")

  ALTER TABLE "SAMOLOT_PRACOWNIK_TECHNICZNY" MODIFY ("ID_SAMOLOTU" NOT NULL ENABLE);
  ALTER TABLE "SAMOLOT_PRACOWNIK_TECHNICZNY" MODIFY ("ID_PRACOWNIKA" NOT NULL ENABLE);
  ALTER TABLE "SAMOLOT_PRACOWNIK_TECHNICZNY" ADD CONSTRAINT "SAMOLOT_PRACOWNIK_TECHNICZ_PK" PRIMARY KEY ("ID_SAMOLOTU", "ID_PRACOWNIKA")

  ALTER TABLE "LOT" ADD CONSTRAINT "ID_LOTU" PRIMARY KEY ("ID_LOTU")
  ALTER TABLE "LOT" MODIFY ("ID_LOTNISKA_WYLOTU" NOT NULL ENABLE);
  ALTER TABLE "LOT" MODIFY ("ID_LOTNISKA_PRZYLOTU" NOT NULL ENABLE);
  ALTER TABLE "LOT" MODIFY ("ID_SAMOLOTU" NOT NULL ENABLE);
  ALTER TABLE "LOT" MODIFY ("DATA_LOTU" NOT NULL ENABLE);
  ALTER TABLE "LOT" MODIFY ("CENA_BILETU" NOT NULL ENABLE);

  ALTER TABLE "SAMOLOT" MODIFY ("NAZWA" NOT NULL ENABLE);
  ALTER TABLE "SAMOLOT" MODIFY ("MODEL" NOT NULL ENABLE);
  ALTER TABLE "SAMOLOT" MODIFY ("ILOSC_MIEJSC" NOT NULL ENABLE);
  ALTER TABLE "SAMOLOT" ADD PRIMARY KEY ("ID_SAMOLOTU")

  ALTER TABLE "BAGAZ" ADD CONSTRAINT "FK_KLIENTA_BAGAZ" FOREIGN KEY ("ID_KLIENTA")
	  REFERENCES "KLIENT" ("ID_KLIENTA") ENABLE;

  ALTER TABLE "BILET" ADD CONSTRAINT "FK_BILET_KLIENT" FOREIGN KEY ("ID_KLIENTA")
	  REFERENCES "KLIENT" ("ID_KLIENTA") ENABLE;
  ALTER TABLE "BILET" ADD CONSTRAINT "FK_ID_LOTU" FOREIGN KEY ("ID_LOTU")
	  REFERENCES "LOT" ("ID_LOTU") ENABLE;

  ALTER TABLE "LOT" ADD CONSTRAINT "FK_SAMOLOT" FOREIGN KEY ("ID_SAMOLOTU")
	  REFERENCES "SAMOLOT" ("ID_SAMOLOTU") ENABLE;
  ALTER TABLE "LOT" ADD CONSTRAINT "FK_LOT_LOTNISKO_WYL" FOREIGN KEY ("ID_LOTNISKA_WYLOTU")
	  REFERENCES "LOTNISKO" ("ID_LOTNISKA") ENABLE;
  ALTER TABLE "LOT" ADD CONSTRAINT "FK_LOT_LOTNISKO_PRZYL" FOREIGN KEY ("ID_LOTNISKA_PRZYLOTU")
	  REFERENCES "LOTNISKO" ("ID_LOTNISKA") ENABLE;

  ALTER TABLE "LOT_PRACOWNIK_ADMINISTRACYJNY" ADD CONSTRAINT "FK_LOT_PRAC" FOREIGN KEY ("ID_LOTU")
	  REFERENCES "LOT" ("ID_LOTU") ENABLE;
  ALTER TABLE "LOT_PRACOWNIK_ADMINISTRACYJNY" ADD CONSTRAINT "FK_PRAC_ADMIN" FOREIGN KEY ("ID_PRACOWNIKA")
	  REFERENCES "PRACOWNIK_ADMINISTRACYJNY" ("ID_PRACOWNIKA") ENABLE;

  ALTER TABLE "PRACOWNIK_ADMINISTRACYJNY" ADD CONSTRAINT "FK_PRAC" FOREIGN KEY ("ID_ADMINISTRATORA")
	  REFERENCES "ADMINISTRATOR" ("ID_ADMINISTRATORA") ENABLE;

  ALTER TABLE "PRACOWNIK_TECHNICZNY" ADD CONSTRAINT "ID_ADMINISTRATORA" FOREIGN KEY ("ID_ADMINISTRATORA")
	  REFERENCES "ADMINISTRATOR" ("ID_ADMINISTRATORA") ENABLE;

  ALTER TABLE "SAMOLOT_PRACOWNIK_TECHNICZNY" ADD CONSTRAINT "FK_SAM_PRAC_TECH" FOREIGN KEY ("ID_SAMOLOTU")
	  REFERENCES "SAMOLOT" ("ID_SAMOLOTU") ENABLE;
  ALTER TABLE "SAMOLOT_PRACOWNIK_TECHNICZNY" ADD CONSTRAINT "FK_PRAC_TECH_SAMO" FOREIGN KEY ("ID_PRACOWNIKA")
	  REFERENCES "PRACOWNIK_TECHNICZNY" ("ID_PRACOWNIKA") ENABLE;

  ALTER TABLE "UZYTKOWNIK" ADD CONSTRAINT "FK_U_KLIENT" FOREIGN KEY ("ID_KLIENTA")
	  REFERENCES "KLIENT" ("ID_KLIENTA") ENABLE;
  ALTER TABLE "UZYTKOWNIK" ADD CONSTRAINT "FK_U_PRAC_ADM" FOREIGN KEY ("ID_PRAC_ADM")
	  REFERENCES "PRACOWNIK_ADMINISTRACYJNY" ("ID_PRACOWNIKA") ENABLE;
  ALTER TABLE "UZYTKOWNIK" ADD CONSTRAINT "FK_U_ADMINISTRATOR" FOREIGN KEY ("ID_ADMINISTRATORA")
	  REFERENCES "ADMINISTRATOR" ("ID_ADMINISTRATORA") ENABLE;
  ALTER TABLE "UZYTKOWNIK" ADD CONSTRAINT "FK_U_PRAC_TECH" FOREIGN KEY ("ID_PRAC_TECH")
	  REFERENCES "PRACOWNIK_TECHNICZNY" ("ID_PRACOWNIKA") ENABLE;

  ALTER TABLE "ZAJETE_MIEJSCA" ADD CONSTRAINT "ID_LOT" FOREIGN KEY ("ID_LOTU")
	  REFERENCES "LOT" ("ID_LOTU") ENABLE;
